<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/3/2024 7:22:28 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="USER"
  DTS:CreatorName="USER\Lenovo"
  DTS:DTSID="{C7D8E64F-CC66-4B1F-98A3-52EDB4D33B7C}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="4"
  DTS:VersionGUID="{853740FC-9863-4201-9B21-3977A5B0A104}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{C1D8AC17-F569-43A6-96F3-1C875267441F}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_ec9e60ff6cd142f78cf351092b1999b9"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ec9e60ff6cd142f78cf351092b1999b9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ec9e60ff6cd142f78cf351092b1999b9")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="System.IO" version="4.3.0" targetFramework="net472" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="ST_ec9e60ff6cd142f78cf351092b1999b9.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{061577DC-9648-4FC4-A2A4-2CD342DC84B2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ec9e60ff6cd142f78cf351092b1999b9</RootNamespace>
    <AssemblyName>ST_ec9e60ff6cd142f78cf351092b1999b9</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\DELL\AppData\Local\Temp\Vsta\SSIS_ST160\Vstag2uTDHjXNkSY6Yp7O6rtQA\packages\Newtonsoft.Json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Data" />
    <Reference Include="System.IO, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\Lenovo\AppData\Local\Temp\Vsta\SSIS_ST160\VstaZTQfi6FEzkaJVcmJlTBZPg\packages\System.IO.4.3.0\lib\net462\System.IO.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http, Version=4.1.1.3, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\DELL\AppData\Local\Temp\Vsta\SSIS_ST160\Vstag2uTDHjXNkSY6Yp7O6rtQA\packages\System.Net.Http.4.3.4\lib\net46\System.Net.Http.dll</HintPath>
    </Reference>
    <Reference Include="System.Runtime, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\DELL\AppData\Local\Temp\Vsta\SSIS_ST160\Vstag2uTDHjXNkSY6Yp7O6rtQA\packages\System.Runtime.4.3.0\lib\net462\System.Runtime.dll</HintPath>
    </Reference>
    <Reference Include="System.Security.Cryptography.Algorithms, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\DELL\AppData\Local\Temp\Vsta\SSIS_ST160\Vstag2uTDHjXNkSY6Yp7O6rtQA\packages\System.Security.Cryptography.Algorithms.4.3.0\lib\net463\System.Security.Cryptography.Algorithms.dll</HintPath>
    </Reference>
    <Reference Include="System.Security.Cryptography.Encoding, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\DELL\AppData\Local\Temp\Vsta\SSIS_ST160\Vstag2uTDHjXNkSY6Yp7O6rtQA\packages\System.Security.Cryptography.Encoding.4.3.0\lib\net46\System.Security.Cryptography.Encoding.dll</HintPath>
    </Reference>
    <Reference Include="System.Security.Cryptography.Primitives, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\DELL\AppData\Local\Temp\Vsta\SSIS_ST160\Vstag2uTDHjXNkSY6Yp7O6rtQA\packages\System.Security.Cryptography.Primitives.4.3.0\lib\net46\System.Security.Cryptography.Primitives.dll</HintPath>
    </Reference>
    <Reference Include="System.Security.Cryptography.X509Certificates, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\DELL\AppData\Local\Temp\Vsta\SSIS_ST160\Vstag2uTDHjXNkSY6Yp7O6rtQA\packages\System.Security.Cryptography.X509Certificates.4.3.0\lib\net461\System.Security.Cryptography.X509Certificates.dll</HintPath>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
//using System.IO;
//using System.Linq;
//using System.Net;
using System.Net.Http;
//using System.Text;
//using System.Threading.Tasks;
#endregion

namespace ST_ec9e60ff6cd142f78cf351092b1999b9
{
    public class University
    {
        public string Name { get; set; }
        public string alpha_two_code { get; set; }
        public string Country { get; set; }
    }
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string apiUrl = "http://universities.hipolabs.com/search?country=United+States"; // Replace with your API endpoint

            try
            {
                List<University> universities;
                using (HttpClient client = new HttpClient())
                {
                    string jsonData = client.GetStringAsync(apiUrl).Result;
                    universities = JsonConvert.DeserializeObject<List<University>>(jsonData);
                }

                foreach (University university in universities)
                {
                    //Console.WriteLine("Name: " + university.Name);
                    //Console.WriteLine("AlphaTwoCode: " + university.alpha_two_code);
                    //Console.WriteLine("Country: " + university.Country);
                    //Console.WriteLine();

                    // Insert data into SQL Server
                    InsertUniversityIntoDatabase(university);
                }
            }
            catch (JsonException ex)
            {
                Console.WriteLine("Error deserializing JSON data: " + ex.Message);
            }
            catch (Exception ex)
            {
                Console.WriteLine("An error occurred: " + ex.Message);
            }
        }

        static void InsertUniversityIntoDatabase(University university)
        {
            // Connection string to your SQL Server database
            string connectionString = @"Data Source=DESKTOP-VRQGK65;Initial Catalog=University;Integrated Security=True";

            // SQL query to insert data into the table
            string insertQuery = "INSERT INTO JSON_DATA (Name, AlphaTwoCode, Country) VALUES (@Name, @AlphaTwoCode, @Country)";

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    // Open the connection
                    connection.Open();

                    // Create a command object
                    using (SqlCommand command = new SqlCommand(insertQuery, connection))
                    {
                        // Add parameters to the command
                        command.Parameters.AddWithValue("@Name", university.Name);
                        command.Parameters.AddWithValue("@AlphaTwoCode", university.alpha_two_code);
                        command.Parameters.AddWithValue("@Country", university.Country);


                        // Execute the command
                        int rowsAffected = command.ExecuteNonQuery();

                        // Check if any rows were affected
                        if (rowsAffected > 0)
                        {
                            Console.WriteLine("Data inserted into database successfully!");
                        }
                        else
                        {
                            Console.WriteLine("No rows were inserted into database.");
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("An error occurred while inserting data into database: " + ex.Message);
            }

            //Dts.TaskResult = (int)ScriptResults.Success;

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_ec9e60ff6cd142f78cf351092b1999b9</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_ec9e60ff6cd142f78cf351092b1999b9</msb:DisplayName>
    <msb:ProjectId>{B7B48779-3F6D-4F99-822B-22011EA9F7BC}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_ec9e60ff6cd142f78cf351092b1999b9.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ec9e60ff6cd142f78cf351092b1999b9.Properties.Settings.get_Default():ST_ec9e60ff6cd142f78cf351092b1999b9.Properties.Sett" +
    "ings")]

namespace ST_ec9e60ff6cd142f78cf351092b1999b9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ec9e60ff6cd142f78cf351092b1999b9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ec9e60ff6cd142f78cf351092b1999b9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ec9e60ff6cd142f78cf351092b1999b9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ec9e60ff6cd142f78cf351092b1999b9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ec9e60ff6cd142f78cf351092b1999b9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_ec9e60ff6cd142f78cf351092b1999b9.dll">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
hghqARAAAQBhIAAAAACGCPcAcAACAGkgAAAAAIYICgEQAAIAciAAAAAAhggrB3AAAwB6IAAAAACG
CDcHEAADAIMgAAAAAIYYhQUGAAQAjCAAAAAAhgCWBAYABABcIQAAAACRAOYB/gAEAEwiAAAAAIYY
hQUGAAUAgyAAAAAAgxiFBQYABQBUIgAAAACTCFYFBAEFAIAiAAAAAJMIigEJAQUAhyIAAAAAkwiW
AQ4BBQCPIgAAAACWCLUGFAEGAJYiAAAAAIYYhQUGAAYAniIAAAAAkRiLBRkBBgAAAAEAxgMAAAEA
xgMAAAEAxgMAAAEATgcAAAEAxgMJAIUFAQARAIUFBgAZAIUFCgApAIUFEAAxAIUFEAA5AIUFEABB
AIUFEABJAIUFEABRAIUFEABZAIUFEABhAIUFEABxAIUFBgB5AIUFBgDJAIUFBgDpAIUFFQBpAIUF
BgCRAIUFBgCRAHQAMQAMAMEGQAABAaMGRQAJAQMCBgAUAHcFXAAcAO0GQAAcAAUHbACpAB0BcAAR
AZwGdAAZAXMBegCxAIUFEAAhAYsEBgC5AIUFigC5AHcGkQApAbkDlwA5ARsHnwCBAIUFBgBBAUcB
owBBAQ4HrADRAIUFsgDxAIUFBgAIACAA3gAIACQA4wAgAGMA4wAhAGMA4wAuAAsAMAEuABMAOQEu
ABsAWAEuACMAYQEuACsAigEuADMAigEuADsAigEuAEMAYQEuAEsAkAEuAFMAigEuAFsApwFAAGMA
4wBBAGMA4wBgAGMA4wBhAGMA4wBjAGsA4wCAAGMA4wCDAHMA4wCJAHsAWAGgAGMA4wCpAHsAWAHA
AGMA4wDBAGMA4wAbAH8AAgABAAQABAAFAAYAAABuAR0BAAAOAR0BAAA7Bx0BAABaBSEBAACqASYB
AAC5BisBAgABAAMAAQACAAMAAgADAAUAAQAEAAUAAgAFAAcAAQAGAAcAAgAMAAkAAgANAAsAAQAO
AAsAAgAPAA0AOgBVAGUABIAAAAEAAADhImRyAAAAAAAADwAAAAQAAAAAAAAAAAAAALoAUAAAAAAA
EAAAAAAAAAAAAAAAwwDtAwAAAAAEAAEAAQADAAAAAADMAEYFAAAAAA0AAAAAAAAAAAAAANUAKgUA
AAAABAAAAAAAAAAAAAAAugBEAAAAAAAEAAAAAAAAAAAAAAC6AHMEAAAAAAAAAAABAAAA1gUAAAYA
AwApAEwAAAAAVGFza2AxAExpc3RgMQBTVF9lYzllNjBmZjZjZDE0MmY3OGNmMzUxMDkyYjE5OTli
OQA8TW9kdWxlPgB2YWx1ZV9fAFN5c3RlbS5EYXRhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9u
cy5HZW5lcmljAEdldFN0cmluZ0FzeW5jADxhbHBoYV90d29fY29kZT5rX19CYWNraW5nRmllbGQA
PE5hbWU+a19fQmFja2luZ0ZpZWxkADxDb3VudHJ5PmtfX0JhY2tpbmdGaWVsZABEYkNvbW1hbmQA
U3FsQ29tbWFuZABkZWZhdWx0SW5zdGFuY2UAZ2V0X2FscGhhX3R3b19jb2RlAHNldF9hbHBoYV90
d29fY29kZQBnZXRfTWVzc2FnZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBDb25zb2xlAGdldF9OYW1lAHNldF9OYW1lAFdyaXRlTGluZQBUeXBlAEZhaWx1
cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9i
amVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBJbnNlcnRVbml2ZXJzaXR5SW50
b0RhdGFiYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAEFkZFdpdGhW
YWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBNaWNyb3NvZnQuU3Fs
U2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFz
awBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZWM5ZTYwZmY2Y2QxNDJmNzhjZjM1MTA5MmIxOTk5
YjkuZGxsAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBTcWxQYXJh
bWV0ZXJDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAEpzb25FeGNlcHRpb24A
U3lzdGVtLkRhdGEuQ29tbW9uAE5ld3RvbnNvZnQuSnNvbgBDdWx0dXJlSW5mbwBTeXN0ZW0uTmV0
Lkh0dHAAZ2V0X1Jlc291cmNlTWFuYWdlcgBTcWxQYXJhbWV0ZXIAR2V0RW51bWVyYXRvcgAuY3Rv
cgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vydmlj
ZXMAU3lzdGVtLlJlc291cmNlcwBTVF9lYzllNjBmZjZjZDE0MmY3OGNmMzUxMDkyYjE5OTliOS5Q
cm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZWM5ZTYwZmY2
Y2QxNDJmNzhjZjM1MTA5MmIxOTk5YjkuUHJvcGVydGllcwBTZXR0aW5ncwBTeXN0ZW0uVGhyZWFk
aW5nLlRhc2tzAGdldF9QYXJhbWV0ZXJzAFN1Y2Nlc3MAU2NyaXB0UmVzdWx0cwBDb25jYXQARGVz
ZXJpYWxpemVPYmplY3QAZ2V0X0RlZmF1bHQAZ2V0X1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGll
bnQASHR0cENsaWVudABnZXRfQ3VycmVudABKc29uQ29udmVydABNb3ZlTmV4dABnZXRfQXNzZW1i
bHkARXhlY3V0ZU5vblF1ZXJ5AGdldF9Db3VudHJ5AHNldF9Db3VudHJ5AFVuaXZlcnNpdHkAdW5p
dmVyc2l0eQAAAAAAe2gAdAB0AHAAOgAvAC8AdQBuAGkAdgBlAHIAcwBpAHQAaQBlAHMALgBoAGkA
cABvAGwAYQBiAHMALgBjAG8AbQAvAHMAZQBhAHIAYwBoAD8AYwBvAHUAbgB0AHIAeQA9AFUAbgBp
AHQAZQBkACsAUwB0AGEAdABlAHMAAD9FAHIAcgBvAHIAIABkAGUAcwBlAHIAaQBhAGwAaQB6AGkA
bgBnACAASgBTAE8ATgAgAGQAYQB0AGEAOgAgAAAnQQBuACAAZQByAHIAbwByACAAbwBjAGMAdQBy
AHIAZQBkADoAIAAAgJ9EAGEAdABhACAAUwBvAHUAcgBjAGUAPQBEAEUAUwBLAFQATwBQAC0AVgBS
AFEARwBLADYANQA7AEkAbgBpAHQAaQBhAGwAIABDAGEAdABhAGwAbwBnAD0AVQBuAGkAdgBlAHIA
cwBpAHQAeQA7AEkAbgB0AGUAZwByAGEAdABlAGQAIABTAGUAYwB1AHIAaQB0AHkAPQBUAHIAdQBl
AAGAt0kATgBTAEUAUgBUACAASQBOAFQATwAgAEoAUwBPAE4AXwBEAEEAVABBACAAKABOAGEAbQBl
ACwAIABBAGwAcABoAGEAVAB3AG8AQwBvAGQAZQAsACAAQwBvAHUAbgB0AHIAeQApACAAVgBBAEwA
VQBFAFMAIAAoAEAATgBhAG0AZQAsACAAQABBAGwAcABoAGEAVAB3AG8AQwBvAGQAZQAsACAAQABD
AG8AdQBuAHQAcgB5ACkAAAtAAE4AYQBtAGUAABtAAEEAbABwAGgAYQBUAHcAbwBDAG8AZABlAAAR
QABDAG8AdQBuAHQAcgB5AABTRABhAHQAYQAgAGkAbgBzAGUAcgB0AGUAZAAgAGkAbgB0AG8AIABk
AGEAdABhAGIAYQBzAGUAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAhAABJTgBvACAAcgBvAHcA
cwAgAHcAZQByAGUAIABpAG4AcwBlAHIAdABlAGQAIABpAG4AdABvACAAZABhAHQAYQBiAGEAcwBl
AC4AAG1BAG4AIABlAHIAcgBvAHIAIABvAGMAYwB1AHIAcgBlAGQAIAB3AGgAaQBsAGUAIABpAG4A
cwBlAHIAdABpAG4AZwAgAGQAYQB0AGEAIABpAG4AdABvACAAZABhAHQAYQBiAGEAcwBlADoAIAAA
cVMAVABfAGUAYwA5AGUANgAwAGYAZgA2AGMAZAAxADQAMgBmADcAOABjAGYAMwA1ADEAMAA5ADIA
YgAxADkAOQA5AGIAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
AHzh2d3wNi1Dixug4HJ56iIABCABAQgDIAABBSABARERBCABAQ4FIAEBEXEVBwYOFRJFARIIEkkV
EU0BEggSURJVCCABFRJ9AQ4OBRUSfQEOBCAAEwAGEAEBHgAOCAoBFRJFARIIBhUSRQESCAggABUR
TQETAAYVEU0BEggDIAACAyAADgUAAg4ODgQAAQEOCgcFDg4SWRJdElUGIAIBDhJZBSAAEoCVByAC
EoCZDhwDIAAICAABEoChEYClBSAAEoCpByACAQ4SgKkIt3pcVhk04IkIiYRdzYCAzJEIsD9ffxHV
CjoIMK1P5rKmru0EAAAAAAQBAAAAAgYOAwYSaQMGEm0DBhIUAgYIAwYRGAUAAQESCAQAABJpBAAA
Em0FAAEBEm0EAAASFAMAAAEDKAAOBAgAEmkECAASbQQIABIUCAEACAAAAAAAHgEAAQBUAhZXcmFw
Tm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9lYzllNjBmZjZjZDE0MmY3OGNmMzUx
MDkyYjE5OTliOQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0AABJAQAaLk5FVEZyYW1ld29y
ayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQu
NwAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAADwNgAAAAAAAAAAAAAKNwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
/DYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAGRy4SIAAAEAZHLhIj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AZQBjADkAZQA2ADAAZgBmADYAYwBkADEANAAyAGYANwA4AGMAZgAzADUAMQAwADkAMgBi
ADEAOQA5ADkAYgA5AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgA
OQAyADkALgAyADkAMgA4ADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AZQBjADkAZQA2ADAAZgBmADYAYwBkADEANAAyAGYANwA4AGMAZgAzADUAMQAwADkAMgBiADEA
OQA5ADkAYgA5AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwBlAGMAOQBlADYAMABmAGYANgBjAGQAMQA0ADIAZgA3ADgAYwBmADMANQAxADAA
OQAyAGIAMQA5ADkAOQBiADkALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AZQBjADkAZQA2ADAAZgBmADYAYwBkADEANAAyAGYANwA4AGMAZgAzADUAMQAwADkA
MgBiADEAOQA5ADkAYgA5AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA4ADkAMgA5AC4AMgA5ADIAOAA0AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA4ADkAMgA5AC4AMgA5ADIAOAA0AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABw3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="134,42"
          Id="Package\Script Task"
          TopLeft="226.5,24.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>